!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BufferClass	BufferClass.cpp	/^BufferClass::BufferClass(WINDOW *window_name, std::string filename = "") \/\/ {{{$/;"	f	class:BufferClass
BufferClass	BufferClass.h	/^class BufferClass \/\/ {{{$/;"	c
BUFFERWINDOW	enum.h	/^		BUFFERWINDOW$/;"	e	enum:KINDWINDOW
CommandLineClass	CommandLineClass.cpp	/^CommandLineClass::CommandLineClass(WINDOW *window_name)$/;"	f	class:CommandLineClass
CommandLineClass	CommandLineClass.h	/^class CommandLineClass \/\/ {{{$/;"	c
COMMANDMODE	enum.h	/^		COMMANDMODE,$/;"	e	enum:Mode
COMMANDWINDOW	enum.h	/^		COMMANDWINDOW,$/;"	e	enum:KINDWINDOW
command_branch	BufferClass.cpp	/^int BufferClass::command_branch(int key) \/\/ {{{$/;"	f	class:BufferClass
command_branch	EimEngineClass.cpp	/^int EimEngineClass::command_branch(int key)$/;"	f	class:EimEngineClass
EDITMODE	enum.h	/^		EDITMODE,$/;"	e	enum:Mode
EimEngineClass	EimEngineClass.cpp	/^EimEngineClass::EimEngineClass()$/;"	f	class:EimEngineClass
EimEngineClass	EimEngineClass.h	/^class EimEngineClass$/;"	c
filename	BufferClass.h	/^				std::string filename;$/;"	m	class:BufferClass
id	BufferClass.h	/^				WINDOW *id;$/;"	m	class:BufferClass
KINDWINDOW	enum.h	/^enum KINDWINDOW \/\/ {{{$/;"	g
main	eim.cpp	/^int main(int argc, char *argv[])$/;"	f
mode	BufferClass.h	/^				Mode mode;$/;"	m	class:BufferClass
Mode	enum.h	/^enum Mode \/\/ {{{$/;"	g
MOVEMODE	enum.h	/^		MOVEMODE,$/;"	e	enum:Mode
move_cursor	BufferClass.cpp	/^int BufferClass::move_cursor(int move_y, int move_x){ \/\/ {{{$/;"	f	class:BufferClass
readfile	BufferClass.cpp	/^int BufferClass::readfile(std::string filename){ \/\/ {{{$/;"	f	class:BufferClass
split_window	EimEngineClass.cpp	/^int EimEngineClass::split_window(){$/;"	f	class:EimEngineClass
textlist	BufferClass.h	/^				std::list<std::string> textlist; \/\/ テキストファイルを一行ごとに保持する$/;"	m	class:BufferClass
VISUALMODE	enum.h	/^		VISUALMODE,$/;"	e	enum:Mode
window_id	CommandLineClass.h	/^				WINDOW *window_id;$/;"	m	class:CommandLineClass
write2file	BufferClass.cpp	/^int BufferClass::write2file(std::filename){ \/\/ {{{$/;"	f	class:BufferClass
_get_mode	BufferClass.cpp	/^Mode BufferClass::_get_mode(){ \/\/ {{{$/;"	f	class:BufferClass
_INC_BUFFERCLASS	BufferClass.h	3;"	d
_INC_COMMANDLINECLASS	CommandLineClass.h	3;"	d
_INC_ENUM	enum.h	2;"	d
_INC_SCREENCLASS	EimEngineClass.h	3;"	d
_set_mode	BufferClass.cpp	/^void BufferClass::_set_mode(Mode setmode) {$/;"	f	class:BufferClass
~BufferClass	BufferClass.cpp	/^BufferClass::~BufferClass() \/\/ {{{$/;"	f	class:BufferClass
~CommandLineClass	CommandLineClass.cpp	/^CommandLineClass::~CommandLineClass()$/;"	f	class:CommandLineClass
~EimEngineClass	EimEngineClass.cpp	/^EimEngineClass::~EimEngineClass()$/;"	f	class:EimEngineClass
